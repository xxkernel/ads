#include <fstream>

#include <vector>

 

using namespace std;

 

ifstream in("input.txt");

ofstream out("output.txt");

 

int divSum(int n) { // функция подсчета суммы делителей числа n

    int s = 0;

    for (int i = 1; i * i <= n; i++) {

        if (n % i == 0) {

            s += i;

            if (i * i != n) { // по условию, само число не включаем

                s += n / i;   // добавляем не только делитель, но и его "пару" n/i

            }

        }

    }

    return s - n;

}

 

void gen() { // эту функцию использовали для предпросчета пар (экономит время потом)

    int min = 1;

    int max = 1000000; // от 1 до 1000000

    for (int i = min; i <= max; i++) {

        int s = divSum(i);

        if (i < s && s <= max && divSum(s) == i) { // печатаем пары, удовлетворяющие нашему условию

            out << '{' << i << ", " << s << "}," << endl; // сразу в виде, подходящем для включения в текст

        }

    }

    exit(0); // заканчиваем работу программы, чтобы числа вставить в текст программы

}

 

int main() {

    // gen();  // после предпросчета закомментировать

    vector<vector<int>> f{ // Данные предпросчета оформляем в виде двумерного вектора

        {220, 284}, {1184, 1210}, {2620, 2924}, {5020, 5564}, {6232, 6368},

        {10744, 10856}, {12285, 14595}, {17296, 18416}, {63020, 76084}, {66928, 66992},

        {67095, 71145}, {69615, 87633}, {79750, 88730}, {100485, 124155},

        {122265, 139815}, {122368, 123152}, {141664, 153176}, {142310, 168730},

        {171856, 176336}, {176272, 180848}, {185368, 203432}, {196724, 202444},

        {280540, 365084}, {308620, 389924}, {319550, 430402}, {356408, 399592},

        {437456, 455344}, {469028, 486178}, {503056, 514736}, {522405, 525915},

        {600392, 669688}, {609928, 686072}, {624184, 691256}, {635624, 712216},

        {643336, 652664}, {667964, 783556}, {726104, 796696}, {802725, 863835},

        {879712, 901424}, {898216, 980984}

    };

 

    int min, max;

    in >> min >> max;

    bool absent = true; // не обнаружено таких чисел

    for (auto pair : f) { // просто печатаем подходящие из массива

        if (min <= pair[0] && pair[1] <= max) {

            out << pair[0] << ' ' << pair[1] << endl;

            absent = false;  // уже нашлись

        }

    }

    if (absent) out << "Absent";

    return 0;

}